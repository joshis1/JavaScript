[{"C:\\Users\\shrey\\Documents\\JavaScript\\resources\\app-mern\\src\\front-end-react\\src\\index.js":"1","C:\\Users\\shrey\\Documents\\JavaScript\\resources\\app-mern\\src\\front-end-react\\src\\App.js":"2","C:\\Users\\shrey\\Documents\\JavaScript\\resources\\app-mern\\src\\front-end-react\\src\\components\\AlertDialog.js":"3","C:\\Users\\shrey\\Documents\\JavaScript\\resources\\app-mern\\src\\front-end-react\\src\\components\\ErrorDialog.js":"4","C:\\Users\\shrey\\Documents\\JavaScript\\resources\\app-mern\\src\\front-end-react\\src\\components\\PasswordInput.js":"5","C:\\Users\\shrey\\Documents\\JavaScript\\resources\\app-mern\\src\\front-end-react\\src\\components\\system\\SystemSetup.js":"6","C:\\Users\\shrey\\Documents\\JavaScript\\resources\\app-mern\\src\\front-end-react\\src\\components\\system\\SystemStatus.js":"7","C:\\Users\\shrey\\Documents\\JavaScript\\resources\\app-mern\\src\\front-end-react\\src\\components\\system\\Address.js":"8","C:\\Users\\shrey\\Documents\\JavaScript\\resources\\app-mern\\src\\front-end-react\\src\\components\\system\\NetworkInfo.js":"9"},{"size":150,"mtime":1654822121155,"results":"10","hashOfConfig":"11"},{"size":138,"mtime":1655891240836,"results":"12","hashOfConfig":"11"},{"size":1872,"mtime":1654822121144,"results":"13","hashOfConfig":"11"},{"size":1911,"mtime":1654822121146,"results":"14","hashOfConfig":"11"},{"size":1481,"mtime":1654822121147,"results":"15","hashOfConfig":"11"},{"size":4320,"mtime":1655892818244,"results":"16","hashOfConfig":"11"},{"size":2127,"mtime":1655894117097,"results":"17","hashOfConfig":"11"},{"size":3455,"mtime":1655894140439,"results":"18","hashOfConfig":"11"},{"size":1476,"mtime":1655894194231,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"oi2eu5",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\shrey\\Documents\\JavaScript\\resources\\app-mern\\src\\front-end-react\\src\\index.js",[],["41","42"],"C:\\Users\\shrey\\Documents\\JavaScript\\resources\\app-mern\\src\\front-end-react\\src\\App.js",[],"C:\\Users\\shrey\\Documents\\JavaScript\\resources\\app-mern\\src\\front-end-react\\src\\components\\AlertDialog.js",[],"C:\\Users\\shrey\\Documents\\JavaScript\\resources\\app-mern\\src\\front-end-react\\src\\components\\ErrorDialog.js",[],"C:\\Users\\shrey\\Documents\\JavaScript\\resources\\app-mern\\src\\front-end-react\\src\\components\\PasswordInput.js",[],["43","44"],"C:\\Users\\shrey\\Documents\\JavaScript\\resources\\app-mern\\src\\front-end-react\\src\\components\\system\\SystemSetup.js",["45"],"import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { AppBar, Tabs, Tab } from \"@material-ui/core\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport SystemStatus from \"./SystemStatus\";\r\nimport Address from \"./Address\";\r\nimport NetworkInfo from \"./NetworkInfo\";\r\n\r\nimport classes from \"./SystemStyles.module.css\";\r\n\r\nimport AlertDialog from \"../AlertDialog\";\r\nimport ErrorDialog from \"../ErrorDialog\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Box\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`system-tabpanel-${index}`}\r\n      aria-labelledby={`system-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component={\"div\"}>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\n// TODO: lift\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\n// TODO: lift\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `system-tab-${index}`,\r\n    \"aria-controls\": `system-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst SystemSetup = () => {\r\n\r\n  const unsavedDialogText = 'The current tab has unsaved changes, are you sure you would like to navigate away?'\r\n  const errVal = { 'show': false, 'title': 'System Settings', 'text': \"System failed\" }\r\n\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  const [saveStatus, setSaveStatus] = useState(false);\r\n  const [alertDialog, setAlertDialog] = useState(false);\r\n  const [errorDialog, setErrorDialog] = useState(errVal);\r\n  const [navigate, setNavigate] = useState(0);\r\n\r\n  const tabChangeHandler = (event, newTabIndex) => {\r\n    if (saveStatus) {\r\n      setAlertDialog(true);\r\n      setNavigate(newTabIndex);\r\n    }\r\n    else {\r\n      setTabIndex(newTabIndex);\r\n    }\r\n  };\r\n\r\n\r\n  const saveStateModalHandler = (state) => {\r\n    setSaveStatus(state);\r\n  }\r\n\r\n  const handleAlertDialogClose = (state) => {\r\n    setAlertDialog(false);\r\n    if (state) {\r\n      //change the tab\r\n      setSaveStatus(false);\r\n      setTabIndex(navigate);\r\n    }\r\n  }\r\n\r\n  const handleErrorDialogClose = () => {\r\n    setErrorDialog(false);\r\n  }\r\n\r\n\r\n  // If failed to fetch the value then show this modal.\r\n  const onErrorHandler = (props) => {\r\n    setErrorDialog(true);\r\n  }\r\n\r\n  return (\r\n    <div id=\"system-setup\" className={classes.root}>\r\n      <Box id=\"system-setup-button-container\" className={classes.switchButtonContainer}>\r\n      </Box>\r\n\r\n      <Box id=\"system-setup-main-box\">\r\n        <AppBar\r\n          id=\"system-setup-app-bar\"\r\n          position=\"static\"\r\n          style={{\r\n            background: \"white\",\r\n            marginLeft: \"1.5rem\",\r\n            marginRight: \"2rem\",\r\n            width: \"auto\",\r\n          }}\r\n        >\r\n          <Tabs\r\n            id=\"system-setup-tabs\"\r\n            value={tabIndex}\r\n            onChange={tabChangeHandler}\r\n            className={classes.tabPanel}\r\n          >\r\n            <Tab id=\"system-config-tab\" className={classes.tab} label=\"System Information\" {...a11yProps(0)} />\r\n            <Tab id=\"system-suburb-tab\" className={classes.tab} label=\"Address\" {...a11yProps(1)} />\r\n            <Tab id=\"system-network-tab\" className={classes.tab} label=\"System Network Details\" {...a11yProps(2)} />\r\n          </Tabs>\r\n        </AppBar>\r\n\r\n        <TabPanel id=\"system-config-tab-panel\" value={tabIndex} index={0}>\r\n          <SystemStatus  onSaveState={saveStateModalHandler} id=\"system-config\" />\r\n        </TabPanel>\r\n        <TabPanel id=\"system-suburb-tab-panel\" value={tabIndex} index={1}>\r\n          <Address onSaveState={saveStateModalHandler} id=\"system-suburb\" />\r\n        </TabPanel>\r\n\r\n        <TabPanel id=\"system-network-tab-panel\" value={tabIndex} index={2}>\r\n          <NetworkInfo onSaveState={saveStateModalHandler} id=\"system-network-tab\" />\r\n        </TabPanel>\r\n\r\n      </Box>\r\n\r\n      <AlertDialog open={alertDialog} onclose={handleAlertDialogClose} title='Confirmation'\r\n        text={unsavedDialogText} />\r\n\r\n      <ErrorDialog open={errorDialog.show} onclose={handleErrorDialogClose} title={errorDialog.title}\r\n        text={errorDialog.text} />\r\n\r\n\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default SystemSetup;\r\n","C:\\Users\\shrey\\Documents\\JavaScript\\resources\\app-mern\\src\\front-end-react\\src\\components\\system\\SystemStatus.js",[],"C:\\Users\\shrey\\Documents\\JavaScript\\resources\\app-mern\\src\\front-end-react\\src\\components\\system\\Address.js",[],"C:\\Users\\shrey\\Documents\\JavaScript\\resources\\app-mern\\src\\front-end-react\\src\\components\\system\\NetworkInfo.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"46","replacedBy":"50"},{"ruleId":"48","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":91,"column":9,"nodeType":"54","messageId":"55","endLine":91,"endColumn":23},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],["56"],["57"],"no-unused-vars","'onErrorHandler' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]